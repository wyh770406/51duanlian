<% content_for :title do %>
<h1><%= t 'crud.listing', model: Card.model_name.human %></h1>
<div class="toolbar">
  <% if can?(:manage, CardLineItem) %>
    <%= link_to t('crud.listing', model: t('card_line_items_without_order')), admin_card_line_items_path, class: 'btn' %>
  <% end -%>
  <%= link_to t('crud.new'), new_admin_card_path, class: 'btn btn-primary' %>
  <% if can?(:manage, CsvImport) %>
    <%= link_to t('crud.import'), new_admin_csv_import_path(:import_type=>Card.model_name.human), class: 'btn btn-primary' %>
    <%= link_to t('crud.clear_cards'), clear_cards_admin_cards_path, confirm: t('crud.destroy_confirmation'), method: :clear_cards, class: 'btn btn-primary' %>
  <% end %>
</div>
<% end %>

<%= render 'search' %>

<table class="table table-bordered table-striped">
  <thead>
    <tr>
        <th><%= Card.human_attribute_name(:number) %></th>
        <th><%= Card.human_attribute_name(:username) %></th>
        <th><%= Card.human_attribute_name(:email) %></th>
        <th><%= Card.human_attribute_name(:mobile) %></th>
        <th><%= Card.human_attribute_name(:gym_id) %></th>
        <th class="price"><%= Card.human_attribute_name(:balance) %></th>
        <th></th>
    </tr>
  </thead>
  <tbody>
<% @cards.each do |card| 
  begin
    gym = Gym.find(card.gym_id)
  rescue ActiveRecord::RecordNotFound
    gym = nil
  end
%>
    <tr>
      <td class="control span1">
        <%= card.number %>
        <% if card.on_sale? %>
          <span class="label"><%= t("on_sale") %></span>
        <% end -%>
      </td>
      <td class="control span1"><%= card.username %></td>
      <td style="width:100px;"><%= card.email %></td>
      <td class="control span1"><%= card.mobile %></td>
      <td class="control span2"><%= gym.name if gym%></td>
      <td class="price" style="width:60px;"><%= number_to_currency card.balance %></td>
      <td class="control span2">
        <%= link_to t('crud.show'), admin_card_path(card) %>
        <%= link_to t('crud.edit'), edit_admin_card_path(card) %>
        <%= link_to t('crud.destroy'), admin_card_path(card), confirm: t('crud.destroy_confirmation'), method: :delete %>
      </td>
    </tr>
<% end %>
  </tbody>
</table>

<%= paginate @cards %>
